<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imlList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imlList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABm
        DAAAAk1TRnQBSQFMAgEBBQEAAQkBAAEEAQABEAEAARABAAT/AREBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEQBgABEKwAAcABTAHAAWRjAAEwAcABZAEAARgSAAHAAUwBwAFkAQABQGIAAcABTAHA
        AXwBwAFkAQABGA4AAcABTAHAAWQBAAFAZgABwAFkAcABfAHAAWQBAAEYCgABwAFkAcABZAEAAUBqAAHA
        AUwBwAF8AcABZAEAARgFAAEYAcABZAHAAWQBAAFAbwABQAHAAXwBwAFkAQABGAEAARgBwAFkAcABZAEA
        AUBzAAEwAcABZAHAAXwBwAFkAcABfAEAAUB3AAEwAcABfAHAAXwBwAFMdwABMAHAAXwBwAF8AcABZAHA
        AXwBAAEYcwABMAHAAXwBwAF8AcABTAIAAcABTAHAAXwBAAEYbgABwAEwAcABfAHAAXwBwAFMBgABwAEw
        AcABfAEAATBrAAFAAcABfAHAAXwBwAFMCwABGAHAAWQBAAEwZgABwAFMAcABfAHAAXwBwAFMDwABGAHA
        AWQBAAEYZAABwAF8AcABfAHAAUx7AAEwAQABMP4AAdkBGAGTARkeAAHTARgBzAEYAcwBGAE5AWcBhgFN
        AYYBMQEpASUBlAFSAcYBTAHGATABxgEwAcYBMAEYAWMCAAFmAU4BLAFnAmYBgAFNAcABMAHAARgWAAHT
        ARgBkwExAZMBMQGTATEBWgFrAVoBawFaAWsBWgFrATkBZwGUAVIB0wEYAdMBGAGTATEBhAEQAgAB2QEA
        AewBMwHsATMBcwEaHAAB0wEYAXkBMgGZARkBzAEYAWYBTgEmAX8CZgEpASUBxgFMAYYBZQHGAWQBxgFk
        AcYBMAIAAmYBWAF3ASwBfwEsAX8BLAF/ASwBfwEmAWcCZgGAAU0BwAEwAcABGAwAAZMBMQGZATEBmQEx
        AZMBMQF5AU4B0wEYAXkBTgH/AX8B3gF7AXkBTgHTARgB0wEYAZkBMQHGARgEAAGTARkB7AEzAewBMwFz
        ARoQAAEZAQAB2QEYBgABkwEZAX8BMgF5ATIBmQEZAWYBTgEmAX8BJgF/AmYBhgFNAYYBZQGGAWUBxgFk
        AcYBMAIAASYBZwEzAX8BLAF/ASwBfwEsAX8BLAF/ASwBfwEsAX8BLAF/ASwBfwEmAWcCZgHAATAIAAGT
        ATEBmQExAZkBMQGTATEBeQFOAdMBGAF5AU4B3gF7Af8BfwF5AU4B0wEYAdMBGAGZATEBxgEYBgABkwEZ
        AewBMwHsATMBcwEaCAABGQEAAdkBGAGZATEBeQFOAXkBTgEZBQABkwEZAT8BTwF/AU4BeQEyAWYBTgEm
        AX8BJgF/AmYBhgFNAWwBZgGMAWUBhgFlAcYBMAIAASYBZwEsAWcBMwF/ASwBfwEsAX8BLAF/ASwBfwEs
        AX8BLAF/ASwBfwEsAX8BLAF/AmYIAAGTATEBmQExAZkBMQGTATEBeQFOAdMBGAGTATEBewFvAf8BfwF5
        AU4B0wEYAdMBGAGZATEBxgEYCAABkwEZAewBMwHsATMBcwEaAgABGQEAAdkBGAGZATEBeQFOAXkBTgF5
        AU4BmQExARkFAAGTARkBeQEyAXkBMgF5AU4BZgFOASwBfwEsAX8CZgGGAU0B8AF9AfABfQGMAWUBxgEw
        AgABJgFnASwBZwFYAXcBMwF/ATMBfwEzAX8BMwF/ATMBfwEzAX8BMwF/ATMBfwEsAX8BLAFnAcABGAYA
        AZMBMQGZATEBmQExAZMBMQF5AU4BkwExAVIBSgEYAWMBnAFzAXkBTgHTARgB0wEYAZkBMQHGARgKAAGT
        ARkB7AEzAewBMwF5ATIBeQFOAXkBTgF5AU4BmQExAdkBGAEZCQABmQExAf8BfwHeAXsBvwFnAWwBTgEz
        AX8BLAF/ASwBZwGMAU0B8AF9AfABfQFsAWYBxgEwAgABJgFnASwBfwEzAX8B8wF/ATMBfwEzAX8BMwF/
        ATMBfwEzAX8BMwF/ATMBfwEsAX8BMwF/AQABQgYAAZMBMQGZATEBmQExAZkBMQGZATEBmQExAZkBMQGZ
        ATEBmQExAZkBMQGZATEBmQExAZkBMQHGARgMAAGTARkBMwFPAXkBTgF5AU4BmQExAdkBGAEZDQABPgFT
        AXkBTgF5AU4BeQEyAWwBTgHzAX8BMwF/ASwBZwGMAU0BcwF+AXMBfgFsAWYBxgEwAgABJgFnASwBfwEs
        AWcBWAF3AfMBfwHzAX8B8wF/AfMBfwHzAX8B8wF/AfMBfwEzAX8B8wF/ASYBZwFCAQgEAAGTATEBmQEx
        AZkBMQF5AU4BeQFOAXkBTgF5AU4BeQFOAXkBTgF5AU4BeQFOAXkBTgGZATEBxgEYDgABcwF+AXMBfgHZ
        ATAaAAEQAUIB+QF/AfMBfwEzAWcBjAFNAWwBZgFzAWYBcwFmAcYBMAIAASwBZwEsAX8BLAF/ASwBZwEs
        AWcBLAFnATMBZwH5AX8B8wF/AfMBfwHzAX8B8wF/AfkBfwEzAX8BwAEwBAABkwExAZkBMQH/AX8B/wF/
        Af8BfwH/AX8B/wF/Af8BfwH/AX8B/wF/Af8BfwFaAWsBmQExAcYBGA4AAXMBfgFzAX4B2QEYGgABEAFC
        AfkBfwH5AX8BMwFnARABQgFzAWYBvQF3ATkBfwHGATACAAEsAWcBLAF/ASwBfwEsAX8BLAF/ASwBfwEs
        AX8BLAFnAVgBdwH5AX8B+QF/AVgBdwH5AX8B+QF/AmYEAAGTATEBmQExAf8BfwG9AXcBewFvAXsBbwF7
        AW8BewFvAXsBbwF7AW8B/wF/AVoBawGZATEBxgEYDgABcwF+AXMBfgHZARgaAAFsAU4BsgFWAbIBVgE5
        AWcBEAFCATkBZwEQAUIBEAFCAYwBTQIAASwBZwEzAX8BMwF/ATMBfwEzAX8BMwF/ATMBfwEzAX8BLAF/
        ASwBZwEzAX8BMwFnATMBZwEzAX8BLAFnBAABkwExAZkBMQH/AX8B/wF/Af8BfwH/AX8B/wF/Af8BfwH/
        AX8B/wF/Af8BfwFaAWsBmQExAcYBGA4AAXMBfgFzAX4B2QEYGgABbAFOAf4BfwH+AX8B+QF/ARABQgoA
        ASwBZwHzAX8B8wF/AfMBfwHzAX8B8wF/AfMBfwHzAX8B8wF/AfMBfwHzAX8BLAFnCgABkwExAZkBMQH/
        AX8BvQF3AXsBbwF7AW8BewFvAXsBbwF7AW8BewFvAf8BfwFaAWsBmQExAcYBGA4AAXMBfgFzAX4B2QEY
        GgABGAFjAWwBTgFsAU4BbAFOAWwBTgoAASwBZwHzAX8B8wF/AfMBfwHzAX8BMwF/ATMBfwEzAX8B8wF/
        AfMBfwHzAX8BLAFnCgABkwExAZkBMQH/AX8BvQF3AXsBbwF7AW8BewFvAXsBbwF7AW8BewFvAf8BfwFa
        AWsBmQExAcYBGA4AAXMBfgFzAX4B2QEYLgABwAEYATMBfwH5AX8B+QF/AfkBfwGGAU0BQgEIAUIBCAHA
        ARgBwAEYAcABGAHAARgKAAGTATEBmQExAf8BfwH/AX8B/wF/Af8BfwH/AX8B/wF/Af8BfwH/AX8B/wF/
        AVoBawGZATEBxgEYDgABcwF+AXMBfgHZARgwAAHAARgBwAEYAcABGAGGATEBQgEIFgAB0wEYAZMBMQF7
        AW8BewFvAXsBbwF7AW8BewFvAXsBbwF7AW8BewFvAXsBbwE5AWcBkwExAYQBEA4AARkBGAEZARgBGW8A
        AUIBTQE+BwABPgMAASgDAAFAAwABIAMAAQEBAAEBBgABARYAA/8BAAL/BgAB/wHxBgABHwHhBgABDwHD
        BgABBwGHBgABgwEPBgAB4AEfBgAB8AE/BgAB+AF/BgAB8AE/BgAB4AEfBgABwwGPBgABhwHHBgABDwHj
        BgABHwH/BgABPwH/BgAI/wGfAf8BwAIBAf8BgAEBAQ8B/wHAAQEBAAEPAYABAQGHAfkBwAEBAQABBwGA
        AQEBwwLAAQEBAAEHAYABAQHhAQABwAEBAQABAwGAAQEB8AEDAcABAQEAAQMBgAEBAfgBDwHAAQEBAAEB
        AYABAQH8AX8B/AEBAQABAQGAAQEB/AF/AfwBAQEAAQEBgAEBAfwBfwH8AQEBAAEBAYABAQH8AX8B/AEf
        AQABDwGAAQEB/AF/AfwBHwEAAQ8BgAEBAfwBfwL/AQABDwGAAQEB/AF/Av8BgwH/AYABAQH8AX8G/ws=
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>50</value>
  </metadata>
</root>